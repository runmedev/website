[
  {
    "title": "Hello World!",
    "description": "A simple example to create a new markdown file that test internet connectivity, you can use the ping command to check connectivity to a reliable internet address, such as 8.8.8.8 or www.google.com, ensuring that your device can communicate with the internet. Then proceed to perform an http request to ipecho.net/plain in the terminal to fetch your public IP address and verify internet access.",
    "slug": "hello-world",
    "tags": [
      "notebook",
      "cli",
      "hello world"
    ],
    "runme": "https://runme.dev/api/runme?repository=https%3A%2F%2Fgithub.com%2Fstateful%2Fblog-examples.git&fileToOpen=hello-world/README.md",
    "repo": "https://github.com/stateful/blog-examples/blob/main/hello-world/README.md",
    "docs": "https://docs.runme.dev/installation",
    "mp4": "/examples/hello-world.mp4"
  },
  {
    "title": "Image rendering in notebook cells with OpenAI (image MIME type)",
    "description": "Changing the mimeType in the notebook cell configuration (image/png) let's you specify how you want the output rendered, in this case the image binary generated by OpenAI.",
    "webm": "https://media.graphassets.com/XfI7g2nYTgmwSGg75CDc",
    "mp4": "https://media.graphassets.com/N4iyhZ7S8WmssHAAQnbA",
    "slug": "rendering-an-image-openai",
    "tags": [
      "notebook",
      "render",
      "openai",
      "mime",
      "jpg",
      "image",
      "output"
    ],
    "runme": "https://runme.dev/api/runme?repository=https%253A%252F%252Fgithub.com%252Fstateful%252Fvscode-runme.git%2526fileToOpen%253D%252Fexamples%252FREADME.md",
    "repo": "https://github.com/sourishkrout/loon",
    "docs": "https://docs.runme.dev/configuration/mime"
  },
  {
    "title": "Integration testing a markdown in Github Actions",
    "description": "Avoid having to maintain multiple workflows for building, testing and deploying your application and instead, document them in markdown and have them used by your contributors and CI/CD. Find out in this example how we manage workflows in our `stateful/runmejs` project using Runme.",
    "img": "/graphics/runme-in-ci.png",
    "slug": "integration-testing-markdown-gh-action",
    "runme": "https://runme.dev/api/runme?repository=https%3A%2F%2Fgithub.com%2Fstateful%2Frunmejs.git&fileToOpen=CONTRIBUTING.md",
    "repo": "https://github.com/stateful/runmejs",
    "docs": "https://docs.runme.dev/usage/github-actions-workflow",
    "tags": [
      "cli",
      "testing",
      "markdown",
      "github",
      "action",
      "ci/cd",
      "terminal"
    ]
  },
  {
    "title": "Hardening Ubuntu server",
    "description": "Enhances the server's overall security posture, encourages continuous improvement, and safeguards against future attacks,",
    "mp4": "https://media.graphassets.com/RiKBWblNSbSR86ZcAVTa",
    "webm": "https://media.graphassets.com/NPgIDIcrRaiDt6prS8VD",
    "slug": "Hardening-Ubuntu-server",
    "runme": "https://runme.dev/api/runme?repository=https%3A%2F%2Fgithub.com%2Fstateful%2Fhardening-ubuntu-server%2Fblob%2Fmain%2FREADME.md",
    "repo": "https://github.com/stateful/hardening-ubuntu-server",
    "docs": "https://docs.runme.dev/resources/architecture",
    "tags": [
      "cli",
      "markdown",
      "ci/cd",
      "terminal",
      "ubuntu",
      "security"
    ]
  },
  {
    "title": "Explore large JSON files interactively with antonmedv/fx",
    "description": "Use a powerful Terminal JSON viewer right from your README file",
    "mp4": "/videos/fx.mp4",
    "slug": "explore-json-fx",
    "runme": "https://runme.dev/api/runme?repository=https%253A%252F%252Fgithub.com%252Fstateful%252Fvscode-runme.git%2526fileToOpen%253D%252Fexamples%252FREADME.md",
    "tags": [
      "notebook",
      "fx",
      "json",
      "render"
    ]
  },
  {
    "title": "Launching a Runme notebook with a web link",
    "description": "Empower DevOps engineers with a seamless onboarding experience and eliminate the hurdles posed by fragmented operational documentation. The Runme Web Link offers a frictionless solution: effortlessly launch into VS Code, clone repositories, and pinpoint the precise documents needed for swift productivity gains.",
    "mp4": "/videos/runme-link-demo.mp4",
    "slug": "launch-notebook-web-link",
    "runme": "https://runme.dev/api/runme?repository=https://github.com/stateful/vscode-runme.git&fileToOpen=examples/README.md",
    "tags": [
      "notebook",
      "web",
      "education",
      "tutorial",
      "onboarding"
    ]
  },
  {
    "title": "Render notebook cell output as a table (csv MIME type)",
    "description": "If you want to render a sortable table instead of comma delimited text with your cell output, it's as simple as going into the cell configuration and changing the mimetype to `text/csv` then re-running the cell. This is one of many super useful available MIME types you can take advantage of in your Runme notebook.",
    "mp4": "/examples/csv-example.mp4",
    "slug": "custom-renderer-table-mime",
    "docs": "https://docs.runme.dev/configuration/mime",
    "runme": "https://runme.dev/api/runme?repository=https%3A%2F%2Fgithub.com%2Fstateful%2Fblog-examples.git&fileToOpen=csv-example/README.md",
    "repo": "https://github.com/stateful/blog-examples/blob/main/csv-example/README.md",
    "tags": [
      "notebook",
      "mime",
      "render",
      "output",
      "table"
    ]
  },
  {
    "title": "Chaining output between markdown commands",
    "description": "With the `$__` parameter you can transfer the stdout result of a previous cell into your next execution.",
    "mp4": "/examples/chaining-example.mp4",
    "slug": "chain-output-between-commands",
    "runme": "https://runme.dev/api/runme?repository=https%3A%2F%2Fgithub.com%2Fstateful%2Fblog-examples.git&fileToOpen=chaining-output/README.md",
    "repo": "https://github.com/stateful/blog-examples/blob/main/chaining-output/README.md",
    "docs": "https://docs.runme.dev/configuration/cell-level",
    "tags": [
      "notebook",
      "cli",
      "output",
      "chaining",
      "markdown",
      "workflow",
      "terminal"
    ]
  },
  {
    "title": "Running Docker commands from markdown with our CLI",
    "description": "Runme offers the convenience of sharing the same terminal session between CLI and notebook interfaces, enabling you to seamlessly execute versatile Docker workflows across both VS Code and its terminal environment. This is a basic example utilizing Docker commands to create and manage containers. The application should render a simple Docker logo to demonstrate how to build, run, inspect logs, and terminate a container effectively. This example serves as a practical guide for beginners to understand the fundamental steps involved in working with Docker containers within a development environment using Runme",
    "runme": "https://runme.dev/api/runme?repository=https%3A%2F%2Fgithub.com%2Fstateful%2Fblog-examples.git&fileToOpen=docker-example/README.md",
    "repo": "https://github.com/stateful/blog-examples/blob/main/docker-example/README.md",
    "mp4": "/examples/docker-example.mp4",
    "slug": "running-docker-markdown-cli",
    "tags": [
      "notebook",
      "markdown",
      "docker"
    ]
  },
  {
    "title": "Notebook Language Syntax Support",
    "description": "Runme Notebooks provide extensive support for fenced code blocks in Markdown, accommodating various scripting and declarative languages. Whether you're using YAML, JSON, Python, Bash, or other languages within your Markdown documents, Runme ensures seamless integration with text highlighting and auto-completion features. This comprehensive language support empowers you to write and document more efficiently, enhancing your documentation experience.",
    "mp4": "/examples/notebook-lsp.mp4",
    "runme": "https://runme.dev/api/runme?repository=https%3A%2F%2Fgithub.com%2Fstateful%2Fblog-examples.git&fileToOpen=notebook-lsp/README.md",
    "repo": "https://github.com/stateful/blog-examples/blob/main/notebook-lsp/README.md",
    "slug": "lsp-support",
    "tags": [
      "notebook",
      "lsp",
      "language"
    ]
  },
  {
    "title": "Consistent Environment State",
    "description": "Learn how to effectively utilize environment variables with Runme by executing markdown cells in VS Code while ensuring their persistence. This enables you to seamlessly create a click-to-play notebook experience for running your markdown content in the browser or within VS Code alongside Runme.",
    "mp4": "/examples/environment-state.mp4",
    "slug": "environment-state",
    "runme": "https://runme.dev/api/runme?repository=https%3A%2F%2Fgithub.com%2Fstateful%2Fblog-examples.git&fileToOpen=environment-state/README.md",
    "repo": "https://github.com/stateful/blog-examples/blob/main/environment-state/README.md",
    "tags": [
      "environment",
      "workflow",
      "state"
    ]
  },
  {
    "title": "Runme in Dev Containers",
    "description": "The VS Code window seamlessly connects to an instance of the container image, enabling transparent file system mounting for immediate local reflection of changes, and providing you with a portable environment.",
    "mp4": "/examples/dev-container-example.mp4",
    "runme": "https://runme.dev/api/runme?repository=https%3A%2F%2Fgithub.com%2Fstateful%2Fblog-examples.git&fileToOpen=dev-container-example/README.md",
    "repo": "https://github.com/stateful/blog-examples/blob/main/dev-container-example/README.md",
    "slug": "devcontainer",
    "tags": [
      "devcontainer",
      "workspace",
      "ephemeral"
    ]
  }
]
